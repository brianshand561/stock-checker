name: Infrastructure Deployment

on:
  workflow_dispatch:

jobs:
  infra-deployment:
    runs-on: ubuntu-latest
    env:
      AWS_ROLE_TO_ASSUME: ${{ secrets.AWS_ROLE_TO_ASSUME }}
      
    steps:
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install and Test
        run: npm install

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-duration-seconds: 2400
          aws-region: "us-east-1"
          role-skip-session-tagging: true
          role-external-id: "099644482610"

      - name: Install AWS CDK
        run: npm install -g aws-cdk@latest

      - name: Compile TypeScript
        run: npx tsc || true

      - name: List build directory contents
        run: ls -R ./build

      # - name: CDK Synth
      #   run: cdk synth

      - name: CDK Deploy
        run: cdk deploy --all --require-approval=never --outputs-file ./distributionLink.json

      - name: Show Contents of distributionLink.json
        run: cat distributionLink.json

      - name: Extract API Gateway URL and Write to config.json
        run: |
          API_URL=$(jq -r '.StockPriceAppStack.ApiGatewayUrl' distributionLink.json)
          echo "Extracted API_URL: $API_URL"
          echo "{\"API_ENDPOINT\": \"$API_URL\"}" > config.json

      - name: Extract Website Bucket Name
        id: bucket_name
        run: |
          BUCKET_NAME=$(jq -r '.StockPriceAppStack.WebsiteBucketName' distributionLink.json)
          echo "Extracted bucket name: $BUCKET_NAME"
          echo "::set-output name=bucket::${BUCKET_NAME}"

      - name: Upload config.json to S3
        run: |
          BUCKET_NAME="${{ steps.bucket_name.outputs.bucket }}"
          aws s3 cp config.json s3://$BUCKET_NAME/config.json